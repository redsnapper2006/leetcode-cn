package main

import (
	"container/heap"
	"fmt"
)

type Class struct {
	D int
	N int
	R float64
}
type ClassArr []Class

func (p ClassArr) Len() int {
	return len(p)
}

func (p ClassArr) Swap(i, j int) {
	p[i], p[j] = p[j], p[i]
}

func (p ClassArr) Less(i, j int) bool {
	return p[i].R > p[j].R
}

func (p *ClassArr) Push(c interface{}) {
	*p = append(*p, c.(Class))
}
func (p *ClassArr) Pop() interface{} {
	n := len(*p)
	v := (*p)[n-1]
	*p = (*p)[0 : n-1]
	return v
}

func maxAverageRatio(classes [][]int, extraStudents int) float64 {
	if len(classes) == 1 {
		return float64(classes[0][0]+extraStudents) / float64(classes[0][1]+extraStudents)
	}

	arr := &ClassArr{}
	for i := 0; i < len(classes); i++ {
		heap.Push(arr, Class{D: classes[i][1] - classes[i][0], N: classes[i][1], R: float64(classes[i][1]-classes[i][0]) / float64(classes[i][1]*(classes[i][1]+1))})
	}
	heap.Init(arr)

	for extraStudents > 0 {
		t := heap.Pop(arr).(Class)
		t.N++
		t.R = float64(t.D) / float64(t.N*(t.N+1))
		extraStudents--

		heap.Push(arr, t)
	}
	// fmt.Println(arr)
	sum := float64(0.0)
	for i := 0; i < len(*arr); i++ {
		sum += float64((*arr)[i].N-(*arr)[i].D) / float64((*arr)[i].N)
	}
	return sum / float64(len(classes))
}

func main() {
	fmt.Println(maxAverageRatio([][]int{{257, 513}, {511, 783}, {536, 891}, {742, 896},
		{600, 989}, {174, 975}, {387, 672}, {856, 857}, {554, 952}, {142, 803},
		{828, 878}, {124, 450}, {130, 970}, {55, 903}, {80, 765}, {143, 474},
		{221, 557}, {93, 175}, {188, 317}, {259, 845}, {710, 745}, {451, 754},
		{476, 605}, {512, 965}, {55, 637}, {512, 628}, {299, 333}, {160, 645},
		{261, 492}, {238, 460}, {355, 744}, {44, 668}, {316, 404}, {291, 531},
		{403, 588}, {348, 926}, {503, 955}, {233, 459}, {219, 266}, {359, 760},
		{755, 908}, {158, 238}, {239, 720}, {592, 698}, {972, 997}, {191, 499},
		{132, 909}, {829, 835}, {291, 742}, {557, 718}, {135, 619}, {370, 530},
		{177, 599}, {304, 844}, {524, 853}, {649, 689}, {850, 877}, {431, 940},
		{25, 436}, {349, 972}, {333, 770}, {292, 451}, {706, 918}, {717, 951},
		{288, 294}, {528, 630}, {308, 700}, {60, 66}, {872, 987}, {629, 847},
		{514, 702}, {109, 495}, {77, 347}, {507, 724}, {170, 518}, {151, 366},
		{463, 607}, {537, 785}, {131, 716}, {65, 670}, {137, 270}, {617, 935},
		{42, 695}, {138, 917}, {126, 725}, {178, 883}, {2, 259}, {137, 596},
		{622, 805}, {51, 857}, {558, 562}, {61, 174}, {216, 814}, {755, 1000},
		{573, 664}, {253, 656}, {274, 387}, {150, 803}, {244, 343}, {446, 690},
		{469, 579}, {744, 874}, {888, 951}, {56, 604}, {314, 498}, {215, 949},
		{101, 169}, {331, 707}, {579, 814}, {127, 544}, {610, 789}, {98, 416},
		{322, 372}, {906, 917}, {70, 782}, {130, 667}, {178, 922}, {837, 878},
		{73, 384}, {28, 920}, {184, 272}, {71, 864}, {558, 650}, {332, 852},
		{421, 938}, {140, 896}, {178, 704}, {705, 897}, {482, 733}, {128, 481},
		{191, 248}, {385, 406}, {125, 209}, {929, 961}, {138, 350}, {661, 784},
		{560, 924}, {530, 807}, {6, 697}, {204, 644}, {97, 567}, {134, 308},
		{221, 606}, {671, 759}, {516, 880}, {390, 555}, {726, 911}, {767, 854},
		{457, 788}, {41, 605}, {543, 965}, {608, 788}, {408, 413}, {389, 520},
		{158, 474}, {566, 782}, {223, 898}, {271, 333}, {276, 675}, {719, 775},
		{50, 324}, {744, 765}, {871, 968}, {745, 845}, {414, 698}, {528, 914},
		{660, 905}, {64, 521}, {506, 582}, {758, 764}, {862, 868}, {111, 241},
		{211, 756}, {25, 148}, {188, 762}, {4, 442}, {280, 587}, {285, 787},
		{2, 991}, {748, 966}, {105, 694}, {55, 630}, {592, 872}, {189, 387},
		{260, 554}, {25, 702}, {417, 508}, {177, 299}, {274, 711}, {170, 701},
		{510, 741}, {250, 365}, {264, 821}, {731, 880}, {232, 351}, {221, 469},
		{49, 812}, {274, 822}, {355, 781}, {509, 695}, {202, 216}, {440, 998},
		{186, 772}, {332, 890}, {493, 862}, {23, 812}, {464, 939}, {567, 954},
		{448, 706}, {265, 996}, {207, 567}, {182, 350}, {453, 590}, {187, 316},
		{657, 725}, {433, 929}, {195, 222}, {61, 83}, {202, 660}, {803, 959},
		{172, 972}, {370, 417}, {770, 929}, {230, 985}, {211, 702}, {1, 451},
		{372, 523}, {585, 809}, {39, 299}, {517, 622}, {534, 706}, {158, 888},
		{119, 849}, {232, 828}, {525, 663}, {90, 645}, {164, 815}, {724, 953},
		{427, 449}, {102, 584}, {343, 890}, {17, 535}, {316, 650}, {63, 432},
		{321, 518}, {743, 894}, {578, 642}, {258, 974}, {579, 815}, {157, 915},
		{398, 689}, {185, 790}, {332, 381}, {129, 140}, {549, 736}, {492, 894},
		{485, 659}, {609, 758}, {402, 414}, {183, 752}, {808, 964}, {281, 822},
		{398, 472}, {347, 634}, {706, 809}, {146, 791}, {75, 380}, {146, 609},
		{23, 112}, {524, 819}, {240, 276}, {681, 999}, {207, 290}, {741, 845},
		{735, 751}, {15, 587}, {11, 406}, {54, 880}, {449, 937}, {70, 461},
		{149, 320}, {551, 609}, {112, 798}, {162, 687}, {175, 749}, {77, 907},
		{538, 963}, {664, 823}, {118, 715}, {112, 978}, {156, 917}, {535, 924},
		{743, 964}, {7, 786}, {510, 584}, {101, 957}, {736, 759}, {793, 912},
		{355, 626}, {145, 695}, {18, 519}, {30, 336}, {509, 780}, {191, 594},
		{161, 616}, {510, 679}, {125, 916}, {266, 910}, {162, 793}, {345, 667},
		{361, 841}, {233, 519}, {1, 99}, {490, 1000}, {169, 850}, {268, 926},
		{58, 891}, {624, 799}, {547, 800}, {113, 842}, {554, 601}, {283, 843},
		{323, 905}, {296, 349}, {370, 962}, {283, 901}, {166, 298}, {612, 945},
		{747, 860}, {388, 614}, {406, 721}, {201, 864}, {648, 801}, {355, 724},
		{67, 744}, {641, 941}, {451, 889}, {24, 874}, {478, 673}, {79, 318},
		{414, 563}, {281, 654}, {270, 538}, {212, 476}, {238, 459}, {683, 840},
		{8, 459}, {438, 930}, {303, 799}, {668, 956}, {288, 809}, {38, 62},
		{217, 439}, {248, 280}, {939, 980}, {456, 698}, {337, 359}, {418, 879},
		{300, 533}, {2, 689}, {191, 275}, {7, 283}, {73, 674}, {148, 670},
		{165, 753}, {484, 598}, {107, 636}, {281, 310}, {408, 638}, {333, 931},
		{94, 123}, {604, 653}, {120, 157}, {371, 976}, {74, 104}, {253, 960},
		{562, 621}, {630, 634}, {323, 979}, {659, 793}, {627, 970}, {606, 617},
		{865, 933}, {37, 969}, {219, 229}, {358, 886}, {144, 943}, {65, 129},
		{120, 519}, {144, 244}, {203, 489}, {266, 406}, {366, 868}, {651, 848},
		{99, 542}, {352, 735}, {2, 578}, {211, 736}, {784, 815}, {198, 271},
		{183, 536}, {94, 946}, {825, 992}, {489, 701}, {24, 125}, {152, 720},
		{414, 690}, {743, 805}, {299, 852}, {273, 958}, {612, 675}, {61, 113},
		{240, 302}, {28, 893}, {732, 776}, {622, 755}, {327, 938}, {27, 951},
		{162, 491}, {197, 686}, {683, 997}, {658, 918}, {181, 690}, {147, 432},
		{468, 840}, {456, 843}, {133, 359}, {119, 832}, {46, 653}, {871, 983},
		{52, 689}, {621, 866}, {153, 581}, {372, 784}, {394, 913}, {84, 914},
		{327, 341}, {854, 964}, {373, 660}, {50, 88}, {277, 895}, {137, 549},
		{275, 499}, {268, 550}, {84, 772}, {156, 352}, {137, 236}, {451, 653},
		{437, 730}, {602, 627}, {552, 785}, {96, 256}, {261, 484}, {899, 922},
		{385, 575}, {701, 720}, {251, 916}, {22, 255}, {597, 722}, {418, 426},
		{347, 673}, {47, 105}, {3, 24}, {262, 399}, {113, 851}, {201, 370},
		{420, 998}, {70, 894}, {515, 826}, {482, 631}, {826, 857}, {140, 634},
		{197, 735}, {683, 709}, {62, 814}, {97, 882}, {557, 641}, {551, 618},
		{373, 376}, {97, 492}, {299, 767}, {352, 922}, {725, 974}, {19, 916},
		{456, 889}, {23, 190}, {2, 64}, {579, 726}, {571, 972}, {64, 847},
		{557, 607}, {274, 698}, {173, 255}, {598, 753}, {653, 946}, {52, 432},
		{44, 556}, {318, 523}, {333, 733}, {561, 613}, {708, 975}, {196, 745},
		{21, 732}, {400, 562}, {109, 403}, {685, 956}, {529, 821}, {50, 700},
		{631, 824}, {610, 702}, {531, 966}, {378, 434}, {22, 602}, {202, 376},
		{10, 452}, {131, 782}, {675, 858}, {389, 596}, {504, 978}, {100, 400},
		{21, 330}, {638, 917}, {104, 207}, {33, 314}, {154, 449}, {7, 571},
		{561, 849}, {682, 840}, {473, 836}, {92, 645}, {164, 389}, {651, 795},
		{549, 772}, {481, 717}, {301, 628}, {244, 351}, {175, 404}, {310, 721},
		{590, 663}, {129, 853}, {242, 894}, {349, 850}, {69, 868}, {485, 769},
		{117, 302}, {391, 448}, {233, 800}, {230, 255}, {480, 921}, {228, 342},
		{753, 858}, {385, 617}, {471, 614}, {499, 926}, {202, 784}, {83, 132},
		{573, 944}, {777, 975}, {380, 548}, {15, 179}, {211, 591}, {55, 105},
		{672, 692}, {232, 687}, {34, 853}, {449, 787}, {342, 744}, {534, 982}, {303, 1000},
		{207, 995}, {30, 953}, {213, 967}, {589, 942}, {350, 381}, {510, 662},
		{591, 727}, {108, 353}, {56, 537}, {99, 418}, {430, 748}, {25, 201},
		{389, 962}, {94, 555}, {478, 573}, {120, 445}, {211, 646}, {71, 728},
		{97, 261}}, 93792))
}
